{% extends 'base.html.twig' %}
{% block body %}

<h2>Zapisz wynik tarczy</h2>

<div style="margin-top: 20px; position: relative; width: 500px;">
    <input type="text" id="competitorInput" placeholder="Zawodnik" style="width: 100%; padding: 8px; box-sizing: border-box;">
    <ul id="competitorList" style="list-style: none; padding: 0; margin: 0; border: 1px solid #ccc; position: absolute; width: 100%; max-height: 150px; overflow-y: auto; background: #fff; display: none; z-index: 1000;">
        {% for competitor in competitors %}
            <li data-id="{{ competitor.id }}" data-name="{{ competitor.id }}. {{ competitor.first_name }} {{ competitor.last_name }}" style="padding: 8px; cursor: pointer;">
                {{ competitor.id }}. {{ competitor.first_name }} {{ competitor.last_name }}
            </li>
        {% endfor %}
    </ul>
</div>

<div id="attemptsContainer" style="margin-top: 20px;"></div>
<script>
input = document.getElementById('competitorInput');
list = document.getElementById('competitorList');
attemptsContainer = document.getElementById('attemptsContainer');

input.addEventListener('focus', () => list.style.display = 'block');

input.addEventListener('input', () => {
    const filter = input.value.toLowerCase();
    let hasVisible = false;
    list.querySelectorAll('li').forEach(item => {
        const text = item.textContent.toLowerCase();
        if (text.includes(filter)) {
            item.style.display = 'block';
            hasVisible = true;
        } else {
            item.style.display = 'none';
        }
    });
    list.style.display = hasVisible ? 'block' : 'none';
});

list.addEventListener('click', e => {
    if(e.target.tagName === 'LI') {
        const name = e.target.dataset.name;
        const id = e.target.dataset.id;

        input.value = name;
        list.style.display = 'none';

        fetchAttempts(id);
    }
});

document.addEventListener('click', e => {
    if(!input.contains(e.target) && !list.contains(e.target)) list.style.display = 'none';
});

function fetchAttempts(competitorId) {
    const allAttempts = {{ attempts|json_encode|raw }};
    const competitorAttempts = allAttempts.filter(a => a.competitor_id == competitorId);

    if(competitorAttempts.length === 0) {
        attemptsContainer.innerHTML = '<p>Brak wykupionych tarcz</p>';
        return;
    }

    let html = `<table border="1" cellpadding="5" cellspacing="0">
        <thead>
            <tr>
                <th>Attempt</th>
                <th>Kategoria</th>
                <th>Strzał 1</th>
                <th>Strzał 2</th>
                <th>Strzał 3</th>
                <th>Zapisz</th>
            </tr>
        </thead>
        <tbody>`;

    competitorAttempts.forEach(attempt => {
        html += `
            <tr>
                <td>${attempt.competitor_name}</td>
                <td>${attempt.category_name}</td>
                <td><input type="number" name="score1_${attempt.attempt_id}" class="scoreInput" style="width:60px;" min="0" max="100"></td>
                <td><input type="number" name="score2_${attempt.attempt_id}" class="scoreInput" style="width:60px;" min="0" max="100"></td>
                <td><input type="number" name="score3_${attempt.attempt_id}" class="scoreInput" style="width:60px;" min="0" max="100"></td>
                <td><button type="button" onclick="submitScore(${attempt.attempt_id}, ${attempt.category_id}, this)">Zapisz</button></td>
            </tr>
        `;
    });

    html += '</tbody></table>';
    attemptsContainer.innerHTML = html;

    attemptsContainer.querySelectorAll('.scoreInput').forEach(input => {
        input.addEventListener('input', () => {
            let val = parseInt(input.value, 10);
            if(isNaN(val) || val < 0 || val > 100) input.value = 0;
        });
    });
}

function submitScore(attemptId, categoryId, btn) {
    const row = btn.closest('tr');
    const score1 = row.querySelector(`input[name="score1_${attemptId}"]`).value;
    const score2 = row.querySelector(`input[name="score2_${attemptId}"]`).value;
    const score3 = row.querySelector(`input[name="score3_${attemptId}"]`).value;

    fetch('/admin/submit-score', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest',
            'X-CSRF-TOKEN': '{{ csrf_token("submit_score") }}'
        },
        body: JSON.stringify({
            attemptId: attemptId,
            categoryId: categoryId,
            score1: score1,
            score2: score2,
            score3: score3
        })
    })
    .then(response => response.json())
    .then(data => {
        if(data.success) {
            alert('Score submitted!');
            row.remove();
        } else {
            alert('Błąd przy zapisie: ' + data.message);
        }
    })
    .catch(error => console.error(error));
}

</script>

<a href="{{ path('scoreboard', {'id': id}) }}">Powrót</a>

{% endblock %}
