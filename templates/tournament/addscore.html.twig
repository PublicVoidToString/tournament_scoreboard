{% extends 'base.html.twig' %}

{% block title %}Nowa Tarcza{% endblock %}

{% block body %}
<div class="flex-wrapper">
    <div class="basic-form">
        <h1>Zakup nowej tarczy</h1>

        <form method="post" action="{{ path('app_tournament_add_score', {'id': id}) }}">
            <!-- Wyszukiwarka zawodnika -->
            <div style="position:relative; display:inline-block; width:300px;">
                <label for="competitor-search" class="field-title">Zawodnik:</label><br>
                <input type="text" id="competitor-search" placeholder="Wpisz id, imię lub nazwisko" oninput="filterCompetitors()" class="expandable-list-label">
                <button type="button" onclick="clearCompetitor()" class="clear-button" >Wyczyść wyszukiwanie</button>
                <ul id="competitor-list" class="expandable-list">
                </ul>
            </div>

            <input type="hidden" id="competitor-id" name="competitor">

            <div class="field-locked">
                <label for="association">Przynależność:</label>
                <input type="text" id="association" disabled style="width:100%; font-size:1em; text-align:center;">
            </div>

            <!-- Tabela kategorii -->
            <table border="1" cellpadding="5" cellspacing="0">
                <thead>
                    <tr>
                        <th>Kategoria</th>
                        <th>Wcześniej zakupiono</th>
                        <th>Usuń</th>
                        <th>Ilość</th>
                        <th>Dodaj</th>
                    </tr>
                </thead>
                <tbody>
                    {% for category in categories %}
                        <tr>
                            <td>{{ category.name }}</td>
                            <td>0</td>
                            <td style="padding:0;">
                                <button type="button" id="remove-btn-{{ category.id }}" onclick="updateQuantity({{ category.id }}, -1)" class="icon-button">-</button>
                            </td>
                            <td>
                                <input type="text" id="quantity-{{ category.id }}" name="quantities[{{ category.id }}]" value="0" readonly style="width:40px; text-align:center;">
                            </td>
                            <td style="padding:0;">
                                <button type="button" id="add-btn-{{ category.id }}" onclick="updateQuantity({{ category.id }}, 1)" class="icon-button">+</button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>

            <div>
                <h3>Koszt nowych tarcz: <span id="total-cost">0</span> PLN</h3>
            </div>

            <button type="submit" class="confirm-button" >Dodaj tarcze</button>
            <a href="{{ path('scoreboard', {'id': id}) }}" class="return-button">Powrót do turnieju</a>
        </form>

    </div>
</div>

<script>
document.addEventListener('turbo:load', () => {

    window.quantities = window.quantities || {};
    window.competitorsData = {{ competitors|json_encode|raw }};
    window.competitorAttempts = {{ competitorAttempts|json_encode|raw }};

    window.filterCompetitors = function() {
        let input = document.getElementById('competitor-search');
        let list = document.getElementById('competitor-list');
        if (!input || !list) return;

        let value = input.value.toLowerCase();
        list.innerHTML = '';

        if (!value) {
            list.style.display = 'none';
            return;
        }

        let found = false;
        window.competitorsData.forEach(c => {
            let fullName = `${c.id}. ${c.first_name} ${c.last_name}`.toLowerCase();
            if (fullName.includes(value)) {
                let li = document.createElement('li');
                li.textContent = `${c.id}. ${c.first_name} ${c.last_name}`;
                li.style.padding = '4px 6px';
                li.style.cursor = 'pointer';
                li.onmouseover = () => li.style.background = '#eee';
                li.onmouseout = () => li.style.background = '';
                li.onclick = () => window.selectCompetitor(c);
                list.appendChild(li);
                found = true;
            }
        });

        list.style.display = found ? 'block' : 'none';
    };

    window.selectCompetitor = function(c) {
        let input = document.getElementById('competitor-search');
        let hiddenInput = document.getElementById('competitor-id');
        let association = document.getElementById('association');
        if (input) input.value = `${c.id}. ${c.first_name} ${c.last_name}`;
        if (hiddenInput) hiddenInput.value = c.id;
        if (association) association.value = c.association_name || '';
        window.updateCompetitorById(c.id);

        let list = document.getElementById('competitor-list');
        if (list) list.style.display = 'none';
    };

    window.clearCompetitor = function() {
        let input = document.getElementById('competitor-search');
        let hiddenInput = document.getElementById('competitor-id');
        let association = document.getElementById('association');
        if (input) input.value = '';
        if (hiddenInput) hiddenInput.value = '';
        if (association) association.value = '';

        let rows = document.querySelectorAll('table tbody tr');
        rows.forEach(row => {
            if (!row.children[1]) return;
            row.children[1].textContent = 0;
            let input = row.querySelector('input[id^="quantity-"]');
            if (!input) return;
            input.value = 0;
            let categoryId = input.id.split('-')[1];
            window.quantities[categoryId] = 0;
            let addBtn = document.getElementById(`add-btn-${categoryId}`);
            if (addBtn) addBtn.disabled = false;
        });

        let totalEl = document.getElementById('total-cost');
        if (totalEl) totalEl.textContent = '0';

        let list = document.getElementById('competitor-list');
        if (list) list.style.display = 'none';
    };

    window.updateCompetitorById = function(selectedId) {
        let attempts = window.competitorAttempts[selectedId]?.categories || [];
        window.quantities = {};

        let rows = document.querySelectorAll('table tbody tr');
        rows.forEach(row => {
            let input = row.querySelector('input[id^="quantity-"]');
            if (!input) return;
            input.value = 0;
            let categoryId = input.id.split('-')[1];
            let attempt = attempts.find(a => a.id == categoryId);
            row.children[1].textContent = attempt ? attempt.count : 0;
            window.quantities[categoryId] = 0;

            let addBtn = document.getElementById(`add-btn-${categoryId}`);
            if (addBtn) addBtn.disabled = false;
        });

        window.updateTotalCost();
    };

    window.updateQuantity = function(categoryId, delta) {
        let input = document.getElementById(`quantity-${categoryId}`);
        if (!input) return;

        let value = parseInt(input.value) || 0;
        value += delta;
        if (value < 0) value = 0;

        let selectedId = document.getElementById('competitor-id')?.value;
        let attempts = window.competitorAttempts[selectedId]?.categories || [];
        let attempt = attempts.find(a => a.id == categoryId);
        let alreadyPurchased = attempt ? attempt.count : 0;
        let limit = attempt ? attempt.attempt_limit : 0;

        if (limit != 0 && (value + alreadyPurchased) > limit) {
            value = limit - alreadyPurchased;
            if (value < 0) value = 0;
        }

        input.value = value;
        window.quantities[categoryId] = value;

        let addBtn = document.getElementById(`add-btn-${categoryId}`);
        if (addBtn) addBtn.disabled = (limit != 0 && (value + alreadyPurchased) >= limit);

        window.updateTotalCost();
    };

    window.updateTotalCost = function() {
        let selectedId = document.getElementById('competitor-id')?.value;
        if (!selectedId) return;
        let attempts = window.competitorAttempts[selectedId]?.categories || [];
        let total = 0;

        for (let categoryId in window.quantities) {
            let qty = Number(window.quantities[categoryId]);
            if (qty <= 0) continue;
            let attempt = attempts.find(a => a.id == categoryId);
            if (!attempt) continue;
            if (attempt.count == 0) {
                if (qty >= 1) {
                    total += Number(attempt.initial_fee);
                    total += Number(attempt.additional_fee) * (qty - 1);
                }
            } else {
                total += Number(attempt.additional_fee) * qty;
            }
        }

        let totalEl = document.getElementById('total-cost');
        if (totalEl) totalEl.textContent = total.toFixed(2);
    };

    window.clearCompetitor();
});
</script>
{% endblock %}
